AWSTemplateFormatVersion: 2010-09-09

Parameters:

  VpcStackName:
    Type: String
    Description: 'The name of the VPC stack on which to layer this template.'

  RoleStackName:
    Type: String
    Description: 'The name of the role stack which contains the Ec2InstanceRole.'

  ImageId:
    Type: AWS::EC2::Image::Id
    Description: 'AMI to use in the LaunchConfiguration'
    ConstraintDescription: 'must be a valid AMI id'

  MinSize:
    Type: Number
    Description: 'The MinSize of Asg'
    ConstraintDescription: 'Must be >= 0'

  MaxSize:
    Description: 'The MaxSize of Asg'
    Type: Number
    ConstraintDescription: 'Must be >= MinSize'

  DesiredCapacity:
    Description: 'The DesiredCapacity of Asg'
    Type: Number
    ConstraintDescription: 'Must be between MinSize and MaxSize (inclusive)'

  KeyName:
    Description: 'Name of an existing EC2 KeyPair to enable SSH access to the instances'
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: 'must be the name of an existing EC2 KeyPair.'

Resources:
  Lc:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: true
      ImageId: !Ref ImageId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroups:
        - Fn::ImportValue:
            !Sub ${VpcStackName}-OpenSg
      UserData:
        Fn::Base64:
          !Join
            - ''
            - - "#!/bin/bash -xe\n"
              - "touch /home/ec2-user/some_file.txt\n"
              - !Sub "/opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource Asg --region ${AWS::Region}\n"

  Asg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref Lc
      Tags:
        - Key: Name
          Value: !Sub asg-instance-${AWS::StackName}
          PropagateAtLaunch: true
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub ${VpcStackName}-SubnetA
        - Fn::ImportValue:
            !Sub ${VpcStackName}-SubnetB
        - Fn::ImportValue:
            !Sub ${VpcStackName}-SubnetC
      DesiredCapacity: !Ref DesiredCapacity
      MinSize:         !Ref MinSize
      MaxSize:         !Ref MaxSize

    CreationPolicy:
      ResourceSignal:
        Count: !Ref DesiredCapacity

    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: 3
        MinInstancesInService: !Ref DesiredCapacity
        MinSuccessfulInstancesPercent: 100
        PauseTime: PT5M
        SuspendProcesses:
          - AZRebalance
          - AlarmNotification
          - ScheduledActions
        WaitOnResourceSignals: true

  AsgLC:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: "ami-06ba88d1be185b5c2"
      InstanceType: "t2.micro"
      IamInstanceProfile: "WeiLinTestSecretRole"
